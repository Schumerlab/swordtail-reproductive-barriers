// set up a simple neutral simulation
initialize() {
	
	defineConstant("time", TIME);   
        defineConstant("time2", TIME2); 

	initializeMutationRate(2.2e-08);
	
	// m1 mutation type: neutral
	initializeMutationType("m1", 0.5, "f", 0.0);
	
	// g1 genomic element type: uses m1 for all mutations
	initializeGenomicElementType("g1", m1, 1.0);
	
	// uniform chromosome of length 16 kb with uniform recombination
	initializeGenomicElement(g1, 0, 16639);
	initializeRecombinationRate(0);
	initializeSex("Y"); //Y is the mitochondria, XY individuals are females, XX individuals are males. Y pass only from mother to offspring so can be ignored in XX/males
}

// create two populations individuals
1 early(){
        community.rescheduleScriptBlock(s1, start=time, end=time);
	community.rescheduleScriptBlock(s2, start=40000+time, end=40000+time);
        community.rescheduleScriptBlock(s3, start=time2, end=time2);
}

s1 51499 early(){

        sim.addSubpop("p1", 51500);
        sim.addSubpop("p2", 51500);

}

s2 late(){ p1.setSubpopulationSize(1000); } //make malinche bottlenecked

// output samples of 10 genomes periodically, all fixed mutations at end
s3 515000 late() { p1.outputVCFSample(10,T,"M",T,"population1_mito.vcf");
   	  	  p2.outputVCFSample(10,T,"M",T,"population2_mito.vcf");
		  sim.outputFixedMutations(); }
